module sum(
    input [3:0] a,
    input [3:0] b,
    output [4:0] sum,
    input clk
    );
    assign sum = a + b;
endmodule

interface add_if;
    logic [3:0] a;
    logic [3:0] b;
    logic [4:0] sum;
    logic clk;

    modport DRV (output a,b, input sum,clk);//adding constraint to the flow of data
endinterface

class driver;
    virtual add_if.DRV aif;
    task run();
        forever begin
            @(posedge aif.clk);
            aif.a=2;
            aif.b=6;
            $display("[DRV]: interface triggered");
            $display("sum : %0d", aif.sum);
        end
    endtask 
endclass

module tb;
    add_if aif();
    driver drv;
    sum dut(.a(aif.a), .b(aif.b), .sum(aif.sum), .clk(aif.clk));
    
    initial begin
        drv = new();
        drv.aif = aif; // driver is connected to interface
        drv.run();
    end
    
    initial begin
        aif.clk<=0;
    end
    
    always #5 aif.clk=~aif.clk;

    initial begin
        $dumpfile("dump.vcd");
        $dumpvars;
        #100;
        $finish();
    end 
endmodule
